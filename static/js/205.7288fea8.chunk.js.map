{"version":3,"file":"static/js/205.7288fea8.chunk.js","mappings":"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","sources":["components/MoviesApp/api/API.js","components/MoviesApp/components/Info/styles.js","components/MoviesApp/components/Info/index.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '29cf81a599ffabad205843cb29ab1462';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst getData = request => {\n  return axios\n    .get(request)\n    .then(res => res.data)\n    .catch(error => console.log(error));\n};\n\nexport const getMovies = query => {\n  const request = `${API_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  return getData(request);\n};\n\nexport const getMovieById = id => {\n  const request = `${API_URL}/movie/${id}?api_key=${API_KEY}`;\n\n  return getData(request);\n};\n\nexport const getTrendsMovies = () => {\n  const request = `${API_URL}/trending/all/day?api_key=${API_KEY}`;\n\n  return getData(request);\n};\n\nexport const getCredits = id => {\n  const request = `${API_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n\n  return getData(request);\n};\n\nexport const getReviews = (id, count = 1) => {\n  const request = `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${count}`;\n\n  return getData(request);\n};\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport { deviceSize } from 'components/MoviesApp/variables';\n\nexport const MovieInfo = styled.p`\n  font-size: 18px;\n  letter-spacing: 0.5px;\n  transition: 0.3s;\n\n  &:hover {\n    color: ${props => props.theme.highlightFontColor};\n  }\n`;\n\nexport const Main = styled.main`\n  width: 80%;\n  margin: 0 auto;\n\n  padding: 20px 0;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 18px;\n  padding: 15px 0;\n\n  @media (max-width: ${deviceSize.medium}) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: auto;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const InfoWrapper = styled.div`\n  width: 100%;\n`;\n\nexport const Box = styled.div`\n  margin-bottom: 25px;\n`;\n\nexport const Title = styled.h1`\n  font-size: ${props => (props.fontSize ? props.fontSize : '2rem')};\n  font-weight: 400;\n  letter-spacing: 0.5px;\n`;\n\nexport const SubLinksContainer = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const SubInformation = styled(Link)`\n  font-size: 1.2rem;\n  text-decoration: none;\n  color: inherit;\n  transition: 0.3s;\n\n  &:hover {\n    color: ${props => props.theme.highlightFontColor};\n  }\n`;\n\nexport const GenreBox = styled.div`\n  display: flex;\n  gap: 8px;\n  font-size: 0.8rem;\n`;\n\nexport const Button = styled(Link)`\n  display: inline-block;\n  text-decoration: none;\n  border: 1px solid ${props => props.theme.primaryFontColor};\n  border-radius: 4px;\n  color: inherit;\n  padding: 5px 16px;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:hover {\n    border: 1px solid ${props => props.theme.highlightFontColor};\n    color: ${props => props.theme.highlightFontColor};\n  }\n`;\n","import { getMovieById } from 'components/MoviesApp/api/API';\nimport React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport * as S from './styles';\n\nconst Info = () => {\n  const [movie, setMovie] = useState({});\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieById(Number(id)).then(data => setMovie(data));\n  }, [id]);\n\n  const renderYear = () => {\n    return movie.release_date\n      ? `${movie.original_title} (${new Date(\n          movie.release_date\n        ).getFullYear()})`\n      : `${movie.original_title}`;\n  };\n\n  return (\n    <S.Main>\n      <S.Button to={backLinkHref}>Go Back</S.Button>\n      <S.Wrapper>\n        <div>\n          {movie.poster_path && (\n            <S.Poster\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.original_title}\n            />\n          )}\n        </div>\n        <S.InfoWrapper>\n          <S.Box>\n            <S.Title>{renderYear()}</S.Title>\n            <S.GenreBox>\n              {movie.hasOwnProperty('genres') &&\n                movie.genres.map(({ id, name }) => <p key={id}>{name}</p>)}\n            </S.GenreBox>\n            <p>User score: {movie.vote_count}</p>\n          </S.Box>\n          <S.Box>\n            <S.Title as=\"h2\" fontSize=\"1.5rem\">\n              Overview\n            </S.Title>\n            <p>{movie.overview}</p>\n          </S.Box>\n          <S.Box>\n            <S.Title as=\"h2\" fontSize=\"1.5rem\">\n              Additional Information\n            </S.Title>\n            <S.SubLinksContainer>\n              <S.SubInformation to=\"cast\">Cast</S.SubInformation>\n              <S.SubInformation to=\"reviews\">Reviews</S.SubInformation>\n            </S.SubLinksContainer>\n          </S.Box>\n          <Outlet />\n        </S.InfoWrapper>\n      </S.Wrapper>\n    </S.Main>\n  );\n};\n\nexport default Info;\n"],"names":["API_KEY","API_URL","getData","request","axios","then","res","data","catch","error","console","log","getMovies","query","getMovieById","id","getTrendsMovies","getCredits","getReviews","count","Main","styled","props","theme","highlightFontColor","Wrapper","deviceSize","Poster","InfoWrapper","Box","Title","fontSize","SubLinksContainer","SubInformation","Link","GenreBox","Button","primaryFontColor","useState","movie","setMovie","useParams","backLinkHref","useLocation","state","from","useEffect","Number","to","poster_path","src","alt","original_title","release_date","Date","getFullYear","hasOwnProperty","genres","map","name","vote_count","as","overview"],"sourceRoot":""}