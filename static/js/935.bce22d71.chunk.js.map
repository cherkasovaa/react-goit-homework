{"version":3,"file":"static/js/935.bce22d71.chunk.js","mappings":"sRAEMA,EAAU,mCACVC,EAAU,+BAEVC,EAAU,SAAAC,GACd,OAAOC,EAAAA,EAAAA,IACAD,GACJE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IACRC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAEYG,EAAY,SAAAC,GACvB,IAAMV,EAAO,UAAMF,EAAN,iCAAsCD,EAAtC,kBAAuDa,GAEpE,OAAOX,EAAQC,EAChB,EAEYW,EAAe,SAAAC,GAC1B,IAAMZ,EAAO,UAAMF,EAAN,kBAAuBc,EAAvB,oBAAqCf,GAElD,OAAOE,EAAQC,EAChB,EAEYa,EAAkB,WAC7B,IAAMb,EAAO,UAAMF,EAAN,qCAA0CD,GAEvD,OAAOE,EAAQC,EAChB,EAEYc,EAAa,SAAAF,GACxB,IAAMZ,EAAO,UAAMF,EAAN,kBAAuBc,EAAvB,4BAA6Cf,GAE1D,OAAOE,EAAQC,EAChB,EAEYe,EAAa,SAACH,GAAmB,IAAfI,EAAc,uDAAN,EAC/BhB,EAAO,UAAMF,EAAN,kBAAuBc,EAAvB,4BAA6Cf,EAA7C,gCAA4EmB,GAEzF,OAAOjB,EAAQC,EAChB,C,yKCrCYiB,EAAOC,EAAAA,GAAAA,GAAH,6IAKMC,EAAAA,EAAAA,OAKVC,EAAcF,EAAAA,GAAAA,GAAH,uVAQDC,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,MAIAA,EAAAA,EAAAA,QAKVE,EAAeH,EAAAA,GAAAA,IAAH,gFAMZI,EAAOJ,EAAAA,GAAAA,IAAH,gEAKJK,EAAOL,EAAAA,GAAAA,EAAH,8C,SCDjB,EAnCa,WACX,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQd,GAAOe,EAAAA,EAAAA,MAAPf,IAERgB,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAWe,OAAOjB,IAAKV,MAAK,SAAAE,GAAI,OAAIsB,EAAQtB,EAAKqB,KAAjB,GACjC,GAAE,CAACb,IAKJ,OACE,SAAC,EAAD,UACGa,EAAKK,QAAU,GACd,SAACC,EAAA,EAAD,oDAEAN,EAAKO,KAAI,YAA4C,IARhCC,EAQTrB,EAAwC,EAAxCA,GAAIsB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAClC,OACE,UAAC,EAAD,YACE,SAAC,EAAD,CACEC,KAZaJ,EAYWE,EAXpCF,EAAI,yCAAqCA,GAASK,GAYtCC,IAAKL,KAEP,UAAC,EAAD,YACE,SAAC,EAAD,UAASA,KACT,uBAAIE,SAPYxB,EAWvB,KAIR,C,kGCvCK4B,EAAOtB,EAAAA,GAAAA,EAAH,8CAIGa,EAAW,SAAC,GAAkB,IAAhBU,EAAe,EAAfA,SACzB,OAAO,SAACD,EAAD,UAAOC,GACf,C","sources":["components/MoviesApp/api/API.js","components/MoviesApp/components/Cast/styles.js","components/MoviesApp/components/Cast/index.jsx","components/MoviesApp/components/LackInfo.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '29cf81a599ffabad205843cb29ab1462';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst getData = request => {\n  return axios\n    .get(request)\n    .then(res => res.data)\n    .catch(error => console.log(error));\n};\n\nexport const getMovies = query => {\n  const request = `${API_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  return getData(request);\n};\n\nexport const getMovieById = id => {\n  const request = `${API_URL}/movie/${id}?api_key=${API_KEY}`;\n\n  return getData(request);\n};\n\nexport const getTrendsMovies = () => {\n  const request = `${API_URL}/trending/all/day?api_key=${API_KEY}`;\n\n  return getData(request);\n};\n\nexport const getCredits = id => {\n  const request = `${API_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n\n  return getData(request);\n};\n\nexport const getReviews = (id, count = 1) => {\n  const request = `${API_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${count}`;\n\n  return getData(request);\n};\n","import styled from 'styled-components';\nimport { deviceSize } from 'components/MoviesApp/variables';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 35px;\n\n  @media (max-width: ${deviceSize.small}) {\n    justify-content: center;\n  }\n`;\n\nexport const CardWrapper = styled.li`\n  width: 150px;\n  border-radius: 6px;\n  background-color: #fff;\n  color: #000;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);\n  overflow: hidden;\n\n  @media (max-width: ${deviceSize.medium}) {\n    width: calc(100% / 3.5);\n  }\n\n  @media (max-width: ${deviceSize.small}) {\n    width: 50%;\n  }\n\n  @media (max-width: ${deviceSize.xsmall}) {\n    width: 70%;\n  }\n`;\n\nexport const ProfileImage = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n`;\n\nexport const Info = styled.div`\n  font-size: 0.9rem;\n  padding: 10px;\n`;\n\nexport const Name = styled.p`\n  font-weight: bold;\n`;\n","import { getCredits } from 'components/MoviesApp/api/API';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LackInfo } from '../LackInfo';\n\nimport unknown from './unknown_human.png';\n\nimport * as S from './styles';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getCredits(Number(id)).then(data => setCast(data.cast));\n  }, [id]);\n\n  const renderProfileImage = path =>\n    path ? `https://image.tmdb.org/t/p/w500${path}` : unknown;\n\n  return (\n    <S.List>\n      {cast.length <= 0 ? (\n        <LackInfo>We have no information about the cast</LackInfo>\n      ) : (\n        cast.map(({ id, name, profile_path, character }) => {\n          return (\n            <S.CardWrapper key={id}>\n              <S.ProfileImage\n                src={renderProfileImage(profile_path)}\n                alt={name}\n              />\n              <S.Info>\n                <S.Name>{name}</S.Name>\n                <p>{character}</p>\n              </S.Info>\n            </S.CardWrapper>\n          );\n        })\n      )}\n    </S.List>\n  );\n};\n\nexport default Cast;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Text = styled.p`\n  font-size: 1.1rem;\n`;\n\nexport const LackInfo = ({ children }) => {\n  return <Text>{children}</Text>;\n};\n"],"names":["API_KEY","API_URL","getData","request","axios","then","res","data","catch","error","console","log","getMovies","query","getMovieById","id","getTrendsMovies","getCredits","getReviews","count","List","styled","deviceSize","CardWrapper","ProfileImage","Info","Name","useState","cast","setCast","useParams","useEffect","Number","length","LackInfo","map","path","name","profile_path","character","src","unknown","alt","Text","children"],"sourceRoot":""}